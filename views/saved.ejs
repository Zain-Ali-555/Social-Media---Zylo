<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Saved Posts</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <div class="container">
        <h1>Saved Posts</h1>
        
        <% if (posts.length === 0) { %>
            <div class="no-posts">
                <p>You haven't saved any posts yet.</p>
            </div>
        <% } else { %>
            <div class="posts-grid">
                <% posts.forEach(post => { %>
                    <div class="post-card">
                        <div class="post-header">
                            <h3><%= post.username %></h3>
                            <span class="post-date"><%= new Date(post.created_at).toLocaleDateString() %></span>
                        </div>
                        
                        <div class="post-content">
                            <%= post.content %>
                            
                            <% if (post.media_url) { %>
                                <div class="post-media">
                                    <img src="<%= post.media_url %>" alt="Post media">
                                </div>
                            <% } %>
                        </div>
                        
                        <div class="post-actions">
                            <button class="like-btn <%= post.is_liked ? 'liked' : '' %>" data-post-id="<%= post.id %>">
                                <i class="fas fa-heart"></i>
                                <span class="like-count"><%= post.like_count %></span>
                            </button>
                            
                            <button class="comment-btn" data-post-id="<%= post.id %>">
                                <i class="fas fa-comment"></i>
                                <span class="comment-count"><%= post.comment_count %></span>
                            </button>
                            
                            <button class="share-btn" data-post-id="<%= post.id %>">
                                <i class="fas fa-share"></i>
                                <span class="share-count"><%= post.share_count %></span>
                            </button>
                            
                            <button class="save-btn saved" data-post-id="<%= post.id %>">
                                <i class="fas fa-bookmark"></i>
                            </button>
                        </div>
                        
                        <div class="comments-section" id="comments-<%= post.id %>" style="display: none;">
                            <div class="comments-list"></div>
                            <div class="comment-form">
                                <textarea placeholder="Write a comment..."></textarea>
                                <button class="submit-comment">Post</button>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>
        <% } %>
    </div>

    <script>
        // Like/Unlike functionality
        document.querySelectorAll('.like-btn').forEach(btn => {
            btn.addEventListener('click', async () => {
                const postId = btn.dataset.postId;
                try {
                    const response = await fetch(`/post/${postId}/like`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    const data = await response.json();
                    
                    if (data.liked) {
                        btn.classList.add('liked');
                    } else {
                        btn.classList.remove('liked');
                    }
                    
                    const countSpan = btn.querySelector('.like-count');
                    countSpan.textContent = parseInt(countSpan.textContent) + (data.liked ? 1 : -1);
                } catch (error) {
                    console.error('Error:', error);
                }
            });
        });

        // Comment functionality
        document.querySelectorAll('.comment-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                const postId = btn.dataset.postId;
                const commentsSection = document.getElementById(`comments-${postId}`);
                commentsSection.style.display = commentsSection.style.display === 'none' ? 'block' : 'none';
                
                if (commentsSection.style.display === 'block') {
                    loadComments(postId);
                }
            });
        });

        async function loadComments(postId) {
            try {
                const response = await fetch(`/post/${postId}/comments`);
                const data = await response.json();
                
                const commentsList = document.querySelector(`#comments-${postId} .comments-list`);
                commentsList.innerHTML = data.comments.map(comment => `
                    <div class="comment">
                        <strong>${comment.username}</strong>
                        <p>${comment.content}</p>
                        <small>${new Date(comment.created_at).toLocaleDateString()}</small>
                    </div>
                `).join('');
            } catch (error) {
                console.error('Error:', error);
            }
        }

        // Submit comment
        document.querySelectorAll('.submit-comment').forEach(btn => {
            btn.addEventListener('click', async () => {
                const postId = btn.closest('.comments-section').id.split('-')[1];
                const textarea = btn.previousElementSibling;
                const content = textarea.value.trim();
                
                if (content) {
                    try {
                        const response = await fetch(`/post/${postId}/comment`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ content })
                        });
                        const data = await response.json();
                        
                        const commentsList = document.querySelector(`#comments-${postId} .comments-list`);
                        commentsList.insertAdjacentHTML('afterbegin', `
                            <div class="comment">
                                <strong>${data.comment.username}</strong>
                                <p>${data.comment.content}</p>
                                <small>${new Date(data.comment.created_at).toLocaleDateString()}</small>
                            </div>
                        `);
                        
                        textarea.value = '';
                        
                        const commentCount = document.querySelector(`.comment-btn[data-post-id="${postId}"] .comment-count`);
                        commentCount.textContent = parseInt(commentCount.textContent) + 1;
                    } catch (error) {
                        console.error('Error:', error);
                    }
                }
            });
        });

        // Share functionality
        document.querySelectorAll('.share-btn').forEach(btn => {
            btn.addEventListener('click', async () => {
                const postId = btn.dataset.postId;
                try {
                    const response = await fetch(`/post/${postId}/share`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    const data = await response.json();
                    
                    if (data.shared) {
                        const countSpan = btn.querySelector('.share-count');
                        countSpan.textContent = parseInt(countSpan.textContent) + 1;
                        
                        // Copy post URL to clipboard
                        const postUrl = `${window.location.origin}/post/${postId}`;
                        await navigator.clipboard.writeText(postUrl);
                        alert('Post URL copied to clipboard!');
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            });
        });

        // Save/Unsave functionality
        document.querySelectorAll('.save-btn').forEach(btn => {
            btn.addEventListener('click', async () => {
                const postId = btn.dataset.postId;
                try {
                    const response = await fetch(`/post/${postId}/save`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    const data = await response.json();
                    
                    if (data.saved) {
                        btn.classList.add('saved');
                    } else {
                        btn.classList.remove('saved');
                        // Remove the post card if we're on the saved posts page
                        if (window.location.pathname === '/saved') {
                            btn.closest('.post-card').remove();
                        }
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            });
        });
    </script>
</body>
</html> 